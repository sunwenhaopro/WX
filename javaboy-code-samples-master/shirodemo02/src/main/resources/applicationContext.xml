<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="org.javaboy.shirodemo" use-default-filters="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="ehCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>


    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <property name="cacheManager" ref="ehCacheManager"/>
        <property name="rememberMeManager">
            <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager">
                <property name="cookie">
                    <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                        <property name="name" value="javaboy"/>
                        <property name="maxAge" value="604800"/>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="authenticator">
            <bean class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
<!--                <property name="realms">-->
<!--                    <list>-->
                        <!--这里的顺序很关键，将来就按照这个顺序进行认证-->
<!--                        <ref bean="myRealm01"/>-->
<!--                        <ref bean="myRealm02"/>-->
<!--                    </list>-->
<!--                </property>-->
                <property name="authenticationStrategy">
                    <!--至少有一个 Realm 认证成功就算认证成功，如果有多个 Realm 认证成功，那么会返回所有认证成功的 Realm 的信息-->
<!--                    <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>-->
                    <!--只返回第一个认证成功的 Realm 信息，默认情况下，即使已经有 Realm 认证成功了还是会去继续调用后面剩下的 Realm 进行认证操作-->
<!--                    <bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy">
                        &lt;!&ndash;当已经有 Realm 认证成功了，就不再继续调用后面的 Realm 进行认证了&ndash;&gt;
                        <property name="stopAfterFirstSuccess" value="true"></property>
                    </bean>-->
                    <!--必须所有的 Realm 都要认证成功，才算认证成功-->
                    <bean class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"/>
                </property>
            </bean>
        </property>
        <property name="realms">
            <list>
                <ref bean="myRealm02"/>
            </list>
        </property>
    </bean>

    <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
        <property name="securityManager" ref="securityManager"/>
        <!--配置登录页面-->
        <property name="loginUrl" value="/login"/>
        <!--登录成功后的跳转地址(前提是登录页面是用户直接访问的，而不是访问其他页面重定向到登录页面，如果是后者，则登录成功后会跳转到其他页面)-->
        <property name="successUrl" value="/index"/>
        <!--权限不足默认的跳转地址-->
        <property name="unauthorizedUrl" value="/unauthorizedUrl"/>
        <property name="filterChainDefinitions">
            <!--
            /doLogin 这个接口可以匿名访问
            /** 剩余的其他接口，统统都要认证后才能访问
            -->
            <value>
<!--                /logout=logout-->
                /index=anon
                /doLogin=anon
                /hello=user
<!--                /admin=roles[admin]-->
                /**=authc
            </value>
        </property>
    </bean>

    <!--添加三个 Bean 来支持基于注解的权限配置-->

    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="beanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>